{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The primary domain controller virtual network name"
      }
    },
    "subNetName": {
      "type": "string",
      "metadata": {
        "Description": "The name of the subnet created in the new VNET"
      }
    },
    "recoveryServiceVault": {
      "type": "string",
      "metadata": {
        "Description": "The name of the Recovery Service Vault to associate with for this VM."
      }
    },
    "deployBackup": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to deploy Backup or not: Primarily used for pipeline testing"
      }
    },
    "deployADDS": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to deploy ADDS."
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The primary domain controller virtual machine name"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of virtual machine for eg. Standard_DS2_v2"
      }
    },
    "osVersion": {
      "type": "string",
      "metadata": {
        "description": "The operating system version to be installed on VM for eg. 2019-Datacenter"
      }
    },
    "adAvailabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "The name of Availability Set"
      },
      "defaultValue": ""
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "description": "The name of the vm network interface card"
      },
      "defaultValue": "[concat(parameters('vmName'), '-nic')]"
    },
    "networkResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group containing the Virtual Network to connect to"
      },
      "defaultValue": "[concat(parameters('vmName'), '-nic')]"
    }
  },
  "variables": {
    "SAStoken": "[concat('?',split(deployment().properties.templateLink.uri,'?')[1])]",
    "storageAccountType": "Premium_LRS",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "adPDCNicName": "[parameters('nicName')]",
    "adSubnetRefPDC": "[resourceId(parameters('networkResourceGroupName'),'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subNetName'))]",
    "adDataDiskSize": 127,
    "adPDCModulesURL": "[concat(uri(deployment().properties.templateLink.uri, 'CreateADPDC.zip'), variables('SAStoken'))]",
    "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC"
  },
  "resources": [
    {
      "name": "[variables('adPDCNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('adSubnetRefPDC')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": "[if(equals(parameters('adAvailabilitySetName'), ''), '', json(concat('{ \"id\": \"', resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName')) , '\"}')))]",
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('osVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'),'-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('vmName'),'-datadisk01')]",
              "caching": "None",
              "diskSizeGB": "[variables('adDataDiskSize')]",
              "lun": 0,
              "createOption": "Empty",
              "managedDisk": {
                "storageAccountType": "[variables('storageAccountType')]"
              }

            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "CreateADForest",
          "type": "extensions",
          "apiVersion": "2017-03-30",
          "location": "[resourceGroup().location]",
          "condition": "[parameters('deployADDS')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[variables('adPDCModulesURL')]",
              "ConfigurationFunction": "[variables('adPDCConfigurationFunction')]",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "name": "[concat(parameters('recoveryServiceVault'), '/Azure/iaasvmcontainer;iaasvmcontainerv2;', resourceGroup().name, ';', parameters('vmName'), '/vm;iaasvmcontainerv2;', resourceGroup().name, ';', parameters('vmName'))]",
      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
      "condition": "[parameters('deployBackup')]",
      "apiVersion": "2016-12-01",
      "dependsOn": [
        "[parameters('vmName')]"
      ],
      "properties": {
        "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('recoveryServiceVault'), 'DefaultPolicy')]",
        "protectedItemType": "Microsoft.Compute/virtualMachines",
        "sourceResourceId": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      }
    }
  ],
  "outputs": {
    "ipAddress": {
      "type": "string",
      "value": "[reference(variables('adPDCNicName')).ipConfigurations[0].properties.privateIPAddress]"
    }
  }
}